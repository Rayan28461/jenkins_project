pipeline {
    agent any
    environment {
        VIRTUAL_ENV = 'venv'
    }
    stages {
        stage('Setup') {
            steps {
                script {
                    if (!fileExists("${env.WORKSPACE}\\${VIRTUAL_ENV}")) {
                        bat "py -m venv ${VIRTUAL_ENV}"
                    }
                    bat """
                    call ${VIRTUAL_ENV}\\Scripts\\activate.bat
                    pip install -r requirements.txt
                    pip install coverage bandit
                    """
                }
            }
        }
        stage('Lint') {
            steps {
                script {
                    bat """
                    call ${VIRTUAL_ENV}\\Scripts\\activate.bat
                    flake8 src/app.py
                    """
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    bat """
                    call ${VIRTUAL_ENV}\\Scripts\\activate.bat
                    python -m unittest tests/test_app.py
                    """
                }
            }
        }
        stage('Coverage') {
            steps {
                script {
                    bat """
                    call ${VIRTUAL_ENV}\\Scripts\\activate.bat
                    coverage run --source=src -m unittest discover -s tests
                    coverage report
                    coverage html -d coverage_html_report
                    """
                }
            }
        }
        stage('Security Scan') {
            steps {
                script {
                    bat """
                    call ${VIRTUAL_ENV}\\Scripts\\activate.bat
                    bandit -r src -o bandit_report.html
                    """
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    bat """
                    bash deploy.bat local  // or replace 'remote' with 'local' for local deployment
                    """
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        success {
            archiveArtifacts artifacts: 'coverage_html_report/**', allowEmptyArchive: true
            archiveArtifacts artifacts: 'bandit_report.html', allowEmptyArchive: true
        }
    }
}
